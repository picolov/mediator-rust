name: cicd

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
env:
  CARGO_TERM_COLOR: always

jobs:
  test-binary-build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            use-pgo: true
            use-cross: false
            use-tarpaulin: true
          - os: ubuntu-latest
            target: i686-unknown-linux-gnu
            use-pgo: true
            use-cross: false
            use-tarpaulin: true
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            use-pgo: false # no native runner
            use-cross: true
            use-tarpaulin: true
          - os: ubuntu-latest
            target: armv7-unknown-linux-gnueabihf
            use-pgo: false # no native runner
            use-cross: true
            use-tarpaulin: true
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            use-pgo: true
            use-cross: false
            use-tarpaulin: true
          - os: windows-latest
            target: i686-pc-windows-msvc
            use-pgo: true
            use-cross: false
            use-tarpaulin: true
          # no native github actions runner or cross-rs image
          #- os: windows-latest
          #  target: aarch64-pc-windows-msvc
          #  use-pgo: false # no native runner
          #  use-cross: false
          #  use-tarpaulin: true
          - os: macos-13 # x86
            target: x86_64-apple-darwin
            use-pgo: true
            use-cross: false
            use-tarpaulin: true
          - os: macos-14 # M1
            target: aarch64-apple-darwin
            use-pgo: true
            use-cross: false
            use-tarpaulin: true
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Checkout rumqtt to libs/
        run: git clone https://github.com/picolov/rumqtt.git libs/rumqtt
      - name: Binary Build
        uses: picolov/devops-rust-lightweight-binary@v1
        with:
          target: ${{ matrix.target }}
          use-pgo: ${{ matrix.use-pgo }}
          use-cross: ${{ matrix.use-cross }}
          use-tarpaulin: ${{ matrix.use-tarpaulin }}
          rust-project-path: "tools/cli/"
          crate-name: "mediator-rs"
          upload-artifacts: false
          run-tests-and-coverage: true
